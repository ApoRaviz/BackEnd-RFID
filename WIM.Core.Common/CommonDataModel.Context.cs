//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WIM.Core.Common
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CommonContext : DbContext
    {
        public CommonContext()
            : base("name=CommonContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UserLog> UserLogs { get; set; }
    
        public virtual ObjectResult<string> ProcGetTableDescription(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProcGetTableDescription", tableNameParameter);
        }
    
        public virtual ObjectResult<ProcGetUserLog_Result> ProcGetUserLog(Nullable<int> logID, string requestMethod, string requestUrl, Nullable<System.DateTime> requestDateFrom, Nullable<System.DateTime> requestDateTo)
        {
            var logIDParameter = logID.HasValue ?
                new ObjectParameter("LogID", logID) :
                new ObjectParameter("LogID", typeof(int));
    
            var requestMethodParameter = requestMethod != null ?
                new ObjectParameter("RequestMethod", requestMethod) :
                new ObjectParameter("RequestMethod", typeof(string));
    
            var requestUrlParameter = requestUrl != null ?
                new ObjectParameter("RequestUrl", requestUrl) :
                new ObjectParameter("RequestUrl", typeof(string));
    
            var requestDateFromParameter = requestDateFrom.HasValue ?
                new ObjectParameter("RequestDateFrom", requestDateFrom) :
                new ObjectParameter("RequestDateFrom", typeof(System.DateTime));
    
            var requestDateToParameter = requestDateTo.HasValue ?
                new ObjectParameter("RequestDateTo", requestDateTo) :
                new ObjectParameter("RequestDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetUserLog_Result>("ProcGetUserLog", logIDParameter, requestMethodParameter, requestUrlParameter, requestDateFromParameter, requestDateToParameter);
        }
    
        public virtual ObjectResult<string> ProcGetDataAutoComplete(string columnNames, string tableName, string conditionColumnNames, string keyword)
        {
            var columnNamesParameter = columnNames != null ?
                new ObjectParameter("columnNames", columnNames) :
                new ObjectParameter("columnNames", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var conditionColumnNamesParameter = conditionColumnNames != null ?
                new ObjectParameter("conditionColumnNames", conditionColumnNames) :
                new ObjectParameter("conditionColumnNames", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProcGetDataAutoComplete", columnNamesParameter, tableNameParameter, conditionColumnNamesParameter, keywordParameter);
        }
    
        public virtual ObjectResult<ProcGetTableColumnsDescription_Result> ProcGetTableColumnsDescription(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetTableColumnsDescription_Result>("ProcGetTableColumnsDescription", tableNameParameter);
        }
    }
}
