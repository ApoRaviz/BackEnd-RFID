//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fuji.Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WIM_FUJI_DEVEntities : DbContext
    {
        public WIM_FUJI_DEVEntities()
            : base("name=WIM_FUJI_DEVEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ErrorLogs> ErrorLogs { get; set; }
        public virtual DbSet<ImportSerialDetail> ImportSerialDetail { get; set; }
        public virtual DbSet<ImportSerialHead> ImportSerialHead { get; set; }
        public virtual DbSet<LabelRunning> LabelRunning { get; set; }
        public virtual DbSet<ProgramVersionHistory> ProgramVersionHistory { get; set; }
    
        public virtual int ProcDeleteImportSerial(string headID)
        {
            var headIDParameter = headID != null ?
                new ObjectParameter("HeadID", headID) :
                new ObjectParameter("HeadID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcDeleteImportSerial", headIDParameter);
        }
    
        public virtual int ProcDeleteImportSerialDetail(string headID)
        {
            var headIDParameter = headID != null ?
                new ObjectParameter("HeadID", headID) :
                new ObjectParameter("HeadID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcDeleteImportSerialDetail", headIDParameter);
        }
    
        public virtual int ProcGetDataAutoComplete(string columnNames, string tableName, string conditionColumnNames, string keyword)
        {
            var columnNamesParameter = columnNames != null ?
                new ObjectParameter("columnNames", columnNames) :
                new ObjectParameter("columnNames", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var conditionColumnNamesParameter = conditionColumnNames != null ?
                new ObjectParameter("conditionColumnNames", conditionColumnNames) :
                new ObjectParameter("conditionColumnNames", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcGetDataAutoComplete", columnNamesParameter, tableNameParameter, conditionColumnNamesParameter, keywordParameter);
        }
    
        public virtual ObjectResult<ProcGetImportSerialHead_Result> ProcGetImportSerialHead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetImportSerialHead_Result>("ProcGetImportSerialHead");
        }
    
        public virtual ObjectResult<ProcGetImportSerialHeadByHeadID_Result> ProcGetImportSerialHeadByHeadID(string headID)
        {
            var headIDParameter = headID != null ?
                new ObjectParameter("HeadID", headID) :
                new ObjectParameter("HeadID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcGetImportSerialHeadByHeadID_Result>("ProcGetImportSerialHeadByHeadID", headIDParameter);
        }
    
        public virtual ObjectResult<string> ProcGetNewID(string prefixes)
        {
            var prefixesParameter = prefixes != null ?
                new ObjectParameter("Prefixes", prefixes) :
                new ObjectParameter("Prefixes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProcGetNewID", prefixesParameter);
        }
    
        public virtual int ProcPagingImportSerialHead(Nullable<int> page, Nullable<int> size, string sort, ObjectParameter totalrow)
        {
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(int));
    
            var sortParameter = sort != null ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcPagingImportSerialHead", pageParameter, sizeParameter, sortParameter, totalrow);
        }
    
        public virtual int ProcRunDeleteImportSerial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcRunDeleteImportSerial");
        }
    }
}
